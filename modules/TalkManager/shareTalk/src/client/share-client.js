'use-strict'; const l = b; function b(c, d) { const e = a(); return b = function (f, g) { f = f - 0x1ab; let h = e[f]; return h; }, b(c, d); } (function (c, d) { const k = b, e = c(); while (!![]) { try { const f = parseInt(k(0x204)) / 0x1 + parseInt(k(0x1fa)) / 0x2 * (-parseInt(k(0x1df)) / 0x3) + parseInt(k(0x1fc)) / 0x4 * (parseInt(k(0x1ee)) / 0x5) + parseInt(k(0x1c6)) / 0x6 + -parseInt(k(0x21a)) / 0x7 * (-parseInt(k(0x1e2)) / 0x8) + -parseInt(k(0x1f6)) / 0x9 + parseInt(k(0x1ad)) / 0xa * (parseInt(k(0x1f0)) / 0xb); if (f === d) break; else e['push'](e['shift']()); } catch (g) { e['push'](e['shift']()); } } }(a, 0x70a0b)); const { JSONObject } = org[l(0x21f)], { BitmapFactory } = android[l(0x212)], sha1 = require(l(0x215)), { RequestClient } = require(l(0x205)), { AvailableChatType } = require(l(0x1b2)), { upload, AvailableMimeType } = require(l(0x208)); function a() { const J = ['readAllBytes', 'graphics', 'sharePhoto', 'uuid', '../util/sha1', 'shareText', 'inJustDecodeBounds', 'END:VCARD', 'KakaoTalk\x20Share\x20Extension/10.0.9', '2414517KSSpCU', 'shareRawFile', 'toString', 'lang', 'PHOTO', 'json', 'sharePhotoFile', 'shareLongText', 'VIDEO', 'TEL;TYPE=CELL:', 'Options', 'errMsg', 'media', 'now', 'lat', '150ObGQbz', 'setDate', 'outHeight', '../relogin', 'ios/9.8.0/ko', '../chat', 'sharePhotoURL', 'name', '연락처', 'TEXT', 'shareContactFile', 'method', 'Files', '음성\x20메시지', 'setDataSource', 'shareVideo', 'shareFile', 'data', 'replyText', 'ko-KR', 'Content-Type', 'header', 'toPath', 'includes', 'CONTACT', '3099738OcRDAT', 'lon', 'sdcard/account.t', 'object', 'join', '동영상', 'length', 'cannot\x20get\x20image!', 'Jsoup', 'outMimeType', 'split', 'String', 'token', 'MediaMetadataRetriever', 'pop', 'ignoreHttpErrors', 'arraybuffer', 'login', 'POST', '.m4a', 'shareVideoFile', 'Method', 'FILE', 'cannot\x20get\x20video!', 'decodeByteArray', '263079voWxcj', '&max=', 'nio', '8VqGwaI', 'access_token_expired', 'stringify', 'FN:', 'shareVideoURL', 'shareLocation', 'connect', 'shareFileURL', 'HashMap', 'getName', 'cannot\x20get\x20file!', 'shareLocationName', '54115quBZSc', 'error', '364507MfcLeu', 'share', 'jsoup', 'extractMetadata', 'file', 'post', '6344658xZoKDP', 'parse', 'UTF-8', 'METADATA_KEY_DURATION', '14oBTPMR', 'AUDIO', '44MxCRxH', 'https://talk-shareex.kakao.com', 'https://open.kakao.com/c/search/unified?q=', 'getTime', 'read', 'toUpperCase', 'content-type', '/authWrite', '302474CWKKai', '../request', 'shareAudio', 'getDate', './upload', 'get', 'shareRawContact', 'status', 'File', 'execute', 'getBytes', 'util', 'shareAudioFile']; a = function () { return J; }; return a(); } let channel = {}, client, accessToken, deviceUUID, relogin = require(l(0x1b0)); exports['create'] = function (c) { const m = l; if (!c) throw new Error('shareTalk\x20is\x20need\x20channel'); channel = c, channel['replyText'] = c[m(0x1bf)]; let d = JSON['parse'](FileStream[m(0x200)](m(0x1c8)) || '{}'); if (!d[m(0x1d2)]) throw new Error('KakaoTalk\x20is\x20not\x20login'); return accessToken = d['token'], deviceUUID = d['uuid'], client = new RequestClient['create']({ 'baseURL': m(0x1fd), 'headers': { 'User-Agent': m(0x219), 'Accept-Language': m(0x1c0) } }), channel['share'] = function (e, f, g, h) { const n = m; if (h instanceof JSONObject) h = h[n(0x21c)](); else { if (typeof h === n(0x1c9)) h = JSON[n(0x1e4)](h); else { if (h === void 0x0) h = null; } } let i = client[n(0x1f5)](n(0x203), { 'target': JSON[n(0x1e4)]({ 'chatId': e }), 'chatLog': JSON['stringify']({ 'type': f, 'message': g, 'extra': h }), 'duuid': deviceUUID, 'oauthToken': accessToken }); if (i[n(0x1be)]) { if (i[n(0x1be)]['startsWith']('{')) { if (JSON[n(0x1f7)](i[n(0x1be)])['result'] == n(0x1ef)) { if (JSON[n(0x1f7)](i[n(0x1be)])[n(0x225)] == n(0x1e3)) { relogin[n(0x1d7)](); let j = JSON[n(0x1f7)](FileStream[n(0x200)](n(0x1c8)) || {}); accessToken = j[n(0x1d2)], deviceUUID = j[n(0x214)], i = client[n(0x1f5)]('/authWrite', { 'target': JSON[n(0x1e4)]({ 'chatId': e }), 'chatLog': JSON[n(0x1e4)]({ 'type': f, 'message': g, 'extra': h }), 'duuid': deviceUUID, 'oauthToken': accessToken }); } } } } return { 'success': i[n(0x20b)] === 0xc8, 'status': i[n(0x20b)], 'data': i[n(0x1be)] }; }, channel[m(0x216)] = function (e, f) { const o = m; return this[o(0x1f1)](e, AvailableChatType[o(0x1b6)], f); }, channel[m(0x221)] = function (e, f, g) { const p = m, h = new java[(p(0x21d))][(p(0x1d1))](g)[p(0x20e)](p(0x1f8)), i = upload(AvailableMimeType[p(0x21e)], Date[p(0x1ab)]() + '.txt', h)[p(0x1be)]; return this['share'](e, AvailableChatType[p(0x1b6)], f, { 'path': i, 's': h[p(0x1cc)], 'sd': !![] }); }, channel[m(0x213)] = function (e, f) { const q = m, g = new BitmapFactory[(q(0x224))](); g[q(0x217)] = !![], BitmapFactory[q(0x1de)](f, 0x0, f[q(0x1cc)], g); const h = g[q(0x1cf)], i = h[q(0x1d0)]('/')[0x1], j = upload(AvailableMimeType[q(0x21e)], Date[q(0x1ab)]() + '.' + i, f)[q(0x1be)]; return this['share'](e, AvailableChatType['PHOTO'], '사진', { 'path': j, 'cs': sha1(f)[q(0x201)](), 'w': g['outWidth'], 'h': g[q(0x1af)], 's': f[q(0x1cc)], 'mt': h }); }, channel[m(0x1b3)] = function (e, f, g) { const r = m, h = client[r(0x209)](f, { 'headers': g, 'responseType': 'arraybuffer' }); if (h[r(0x20b)] !== 0xc8) throw new Error(r(0x1cd)); return this[r(0x213)](e, h[r(0x1be)]); }, channel[m(0x220)] = function (e) { const s = m; let f = java[s(0x1e1)][s(0x1f4)][s(0x1b9)][s(0x211)](java['io'][s(0x20c)](e)[s(0x1c3)]()); return this[s(0x213)](f); }, channel[m(0x21b)] = function (e, f, g) { const t = m, h = upload(AvailableMimeType['FILE'], f, g)['data'], i = new Date(); return i[t(0x1ae)](i[t(0x207)]() + 0xe), this[t(0x1f1)](e, AvailableChatType[t(0x1dc)], f, { 'path': h, 'cs': sha1(g)[t(0x201)](), 's': g[t(0x1cc)], 'size': g['length'], 'expire': i[t(0x1ff)](), 'name': f }); }, channel[m(0x1bd)] = function (e, f) { const u = m, g = new java['io']['File'](f), h = java['nio']['file']['Files']['readAllBytes'](g[u(0x1c3)]()); return this['shareRawFile'](e, g[u(0x1eb)](), h); }, channel[m(0x1e9)] = function (e, f, g) { const v = m, h = client['get'](f, { 'headers': g, 'responseType': v(0x1d6) }); if (h[v(0x20b)] !== 0xc8) throw new Error(v(0x1ec)); let i = f[v(0x1d0)]('/')[v(0x1d4)]()[v(0x1d0)]('?')[0x0]; if (!i[v(0x1c4)]('.')) i = '.' + h['headers'][v(0x202)][v(0x1d0)]('/')[0x1]; return this[v(0x21b)](e, f[v(0x1d0)]('/')['pop'](), h[v(0x1be)]); }, channel['shareFileText'] = function (e, f, g) { const w = m; return this[w(0x21b)](e, f, new java[(w(0x21d))]['String'](g)[w(0x20e)](w(0x1f8))); }, channel['shareRawContact'] = function (e, f, g) { const x = m, h = upload(AvailableMimeType[x(0x1c5)], Date['now']() + '.vcf', new java['lang'][(x(0x1d1))](g)[x(0x20e)](x(0x1f8)))['data']; return this[x(0x1f1)](e, AvailableChatType['CONTACT'], x(0x1b5), { 'path': h, 'name': f }); }, channel['shareContact'] = function (e, f, g) { const y = m, h = ['BEGIN:VCARD', 'VERSION:3.0', y(0x1e5) + f, 'N:' + f, y(0x223) + g, y(0x218)]; return this[y(0x20a)](e, f, h[y(0x1ca)]('\x0a')); }, channel[m(0x1b7)] = function (e, f) { const z = m, g = new java['io'][(z(0x20c))](f), h = java[z(0x1e1)]['file'][z(0x1b9)]['readAllBytes'](g[z(0x1c3)]()); return this[z(0x20a)](e, g[z(0x1eb)](), new java[(z(0x21d))]['String'](h, z(0x1f8))); }, channel['shareLocation'] = function (e, f, g, h) { const A = m; return this[A(0x1f1)](e, AvailableChatType['MAP'], f, { 'lat': g, 'lng': h, 'a': f, 't': '', 'c': ![] }); }, channel[m(0x1ed)] = function (e, f) { const B = m, g = client[B(0x209)]('https://search.map.kakao.com/mapsearch/map.daum', { 'params': { 'q': f, 'msFlag': 'A', 'sort': 0x0 }, 'headers': { 'Referer': 'https://map.kakao.com/' }, 'responseType': B(0x21f) }), { place: h } = g['data']; if (h[B(0x1cc)] === 0x0) throw new Error('cannot\x20find\x20location!'); return this[B(0x1e7)](e, h[0x0]['name'], h[0x0][B(0x1ac)], h[0x0][B(0x1c7)]); }, channel[m(0x206)] = function (e, f, g) { const C = m, h = upload(AvailableMimeType[C(0x1fb)], Date['now']() + C(0x1d9), f)[C(0x1be)], i = new Date(); return i[C(0x1ae)](i[C(0x207)]() + 0xe), this[C(0x1f1)](e, AvailableChatType[C(0x1fb)], C(0x1ba), { 'path': h, 'd': g, 's': f['length'], 'expire': i[C(0x1ff)]() }); }, channel[m(0x210)] = function (e, f) { const D = m, g = new java['io']['File'](f), h = java[D(0x1e1)][D(0x1f4)][D(0x1b9)]['readAllBytes'](g[D(0x1c3)]()), i = new android['media'][(D(0x1d3))](); i[D(0x1bb)](f); const j = i[D(0x1f3)](android[D(0x226)]['MediaMetadataRetriever']['METADATA_KEY_DURATION']); return this[D(0x206)](e, h, +j); }, channel['shareAudioURL'] = function (e, f, g) { const E = m; g = g || {}; const h = client[E(0x209)](f, { 'headers': g, 'responseType': E(0x1d6) }); if (h['status'] !== 0xc8) throw new Error('cannot\x20get\x20audio!'); const i = new android['media']['MediaMetadataRetriever'](); i[E(0x1bb)](f, new java[(E(0x20f))][(E(0x1ea))](g)); const j = i['extractMetadata'](android[E(0x226)][E(0x1d3)][E(0x1f9)]); return this[E(0x206)](e, h[E(0x1be)], j); }, channel[m(0x1bc)] = function (e, f, g) { const F = m, h = upload(AvailableMimeType['AUDIO'], Date[F(0x1ab)]() + '.mp4', f)[F(0x1be)]; return this[F(0x1f1)](e, AvailableChatType[F(0x222)], F(0x1cb), { 'type': 'video/mp4', 'path': h, 'w': 0x0, 'h': g ? 0x168 : 0x0 }); }, channel[m(0x1e6)] = function (e, f, g, h) { const G = m; g = g || {}; const i = client['get'](f, { 'headers': g, 'responseType': G(0x1d6) }); if (i[G(0x20b)] !== 0xc8) throw new Error(G(0x1dd)); return this[G(0x1bc)](e, i[G(0x1be)], h); }, channel[m(0x1da)] = function (e, f, g) { const H = m, h = new java['io']['File'](f), i = java['nio'][H(0x1f4)][H(0x1b9)][H(0x211)](h[H(0x1c3)]()); return this['shareVideo'](e, i, g); }, channel['search'] = function (e, f) { const I = m; e = e || this[I(0x1b4)], f = f || 0x5; let g = org['jsoup'][I(0x1ce)][I(0x1e8)](I(0x1fe) + encodeURI(e) + I(0x1e0) + f)['header'](I(0x1c1), 'application/x-www-form-urlencoded;\x20charset=UTF-8')[I(0x1c2)]('A', I(0x1b1))[I(0x1c2)]('authorization', accessToken + '-' + deviceUUID)['ignoreContentType'](!![])[I(0x1d5)](!![])[I(0x1b8)](org[I(0x1f2)]['Connection'][I(0x1db)][I(0x1d8)])[I(0x20d)]()['body'](); return g = JSON[I(0x1f7)](g), { 'success': g['status'] === 0xc8, 'status': g['status'], 'data': g['data'] }; }, channel; };