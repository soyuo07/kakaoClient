'use strict'; const i = b; (function (c, d) { const h = b, e = c(); while (!![]) { try { const f = parseInt(h(0x10e)) / 0x1 + parseInt(h(0x115)) / 0x2 * (-parseInt(h(0x11b)) / 0x3) + parseInt(h(0xfd)) / 0x4 + -parseInt(h(0x105)) / 0x5 + -parseInt(h(0xf6)) / 0x6 + -parseInt(h(0x10a)) / 0x7 + -parseInt(h(0x10b)) / 0x8 * (-parseInt(h(0x111)) / 0x9); if (f === d) break; else e['push'](e['shift']()); } catch (g) { e['push'](e['shift']()); } } }(a, 0x6c6e8)); const utils = require(i(0xf8)); let login_data, loginData = { 'email': '', 'password': '', 'device_uuid': deviceUUID() }, accessToken = {}; const config = utils[i(0x101)]; function deviceUUID() { const j = i; return !java['io']['File']('sdcard/deviceUUID.dat')[j(0x110)]() ? FileStream['write']('sdcard/deviceUUID.dat', utils[j(0x109)]()) : FileStream[j(0x106)](j(0x10f)); } function getLogin() { const k = i; let c = JSON[k(0x107)](FileStream['read'](k(0xfe)) || '{}'); return { 'em': c[k(0xf9)], 'pw': c[k(0x108)], 'id': loginData[k(0x117)] }; } function login() { let c = getLogin(); return login_request(c['em'], c['pw'], c['id']); } function a() { const m = ['&device_uuid=', 'DEV_NAME', 'status', '3483565hQzwRR', 'read', 'parse', 'password', 'DeviceUUID', '5317823KmXSRi', '17210648rMupsd', 'https://katalk.kakao.com/', 'post', '681129XiZKXV', 'sdcard/deviceUUID.dat', 'exists', '9gAewGw', 'get_headers', 'sdcard/account.t', '&one_store=false&forced=true&permanent=true&email=', '268RUPadY', 'data', 'device_uuid', 'platform', 'form', 'password=', '12588iEtjDd', 'exports', 'access_token', '4963488UsZaGX', 'token', './utils', 'email', 'stringify', '/account/login.json', 'value', '1830360kElckg', 'sdcard/account.k', 'write', 'uuid', 'config']; a = function () { return m; }; return a(); } function getAutorization() { return accessToken; } function b(c, d) { const e = a(); return b = function (f, g) { f = f - 0xf6; let h = e[f]; return h; }, b(c, d); } function login_request(c, d, e) { const l = i, f = l(0x11a) + d + '&device_name=' + config[l(0x103)] + l(0x114) + c + l(0x102) + e, g = utils[l(0x10d)](l(0x10c) + config[l(0x118)] + l(0xfb), encodeURI(f), { 'headers': utils[l(0x112)](l(0x119), e) }); return g[l(0x116)][l(0x104)] == -0x64 ? g['data'] : g['data']['status'] == 0x0 ? (Log['i']('--\x20login\x20--\x0a\x0a' + JSON[l(0xfa)](g, null, 0x4)), accessToken[l(0x100)] = e, accessToken[l(0xf7)] = g['data'][l(0x11d)], accessToken[l(0xfc)] = accessToken[l(0xf7)] + '-' + e, accessToken[l(0x110)] = !![], FileStream[l(0xff)](l(0x113), JSON['stringify']({ 'token': accessToken['token'], 'uuid': accessToken[l(0x100)] })), g[l(0x116)]) : g[l(0x116)]; } module[i(0x11c)] = { 'login': login, 'get': getAutorization };