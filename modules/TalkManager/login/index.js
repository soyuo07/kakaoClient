'use strict'; const j = b; (function (c, d) { const i = b, e = c(); while (!![]) { try { const f = -parseInt(i(0x103)) / 0x1 * (parseInt(i(0x101)) / 0x2) + -parseInt(i(0xec)) / 0x3 + parseInt(i(0x108)) / 0x4 + -parseInt(i(0x113)) / 0x5 + -parseInt(i(0x106)) / 0x6 * (-parseInt(i(0xfe)) / 0x7) + -parseInt(i(0xf3)) / 0x8 * (parseInt(i(0xfb)) / 0x9) + parseInt(i(0xfc)) / 0xa; if (f === d) break; else e['push'](e['shift']()); } catch (g) { e['push'](e['shift']()); } } }(a, 0x1ffb6)); const utils = require('./utils'); let login_data, loginData = { 'email': '', 'password': '', 'device_uuid': deviceUUID() }, accessToken = {}; const config = utils[j(0x102)]; function deviceUUID() { const k = j; return !java['io'][k(0x10e)]('sdcard/deviceUUID.dat')[k(0xff)]() ? FileStream['write']('sdcard/deviceUUID.dat', utils['DeviceUUID']()) : FileStream['read'](k(0x10f)); } function setLoginInfo(c, d) { const l = j; FileStream[l(0xf7)]('sdcard/account.k', JSON[l(0xf1)]({ 'email': c, 'password': d })); } function getLogin() { const m = j; let c = JSON['parse'](FileStream[m(0xf0)](m(0x111)) || '{}'); return { 'em': c[m(0x107)], 'pw': c[m(0x112)], 'id': loginData['device_uuid'] }; } function login() { let c = getLogin(); return login_request(c['em'], c['pw'], c['id']); } function request() { let c = getLogin(); return passcode_request(c['em'], c['pw'], c['id']); } function a() { const q = ['password', '184725fesuqQ', 'post', '&device_uuid=', '375090ZjkGvH', 'uuid', 'https://katalk.kakao.com/', '/account/login.json', 'read', 'stringify', '&device_name=', '336344zrdNUg', 'access_token', '&one_store=false&forced=true&permanent=true&email=', 'platform', 'write', 'token', '/account/register_device.json', '&forced=true&permanent=true&email=', '9qvUwxa', '3078970SRaeFy', 'data', '507178NMvdhr', 'exists', '&one_store=false&model_name=', '148DEAcmk', 'config', '3287ZGAgrG', 'get_headers', 'value', '6mGazAm', 'email', '791612LJTEbc', '--\x20login\x20--\x0a\x0a', 'DEV_NAME', 'status', 'password=', 'model', 'File', 'sdcard/deviceUUID.dat', '&passcode=', 'sdcard/account.k']; a = function () { return q; }; return a(); } function passcode(c) { let d = getLogin(); return register_device(d['em'], d['pw'], d['id'], c); } function b(c, d) { const e = a(); return b = function (f, g) { f = f - 0xeb; let h = e[f]; return h; }, b(c, d); } function getAutorization() { return accessToken; } function login_request(c, d, e) { const n = j, f = n(0x10c) + d + n(0xf2) + config[n(0x10a)] + n(0xf5) + c + '&device_uuid=' + e, g = utils['post']('https://katalk.kakao.com/' + config[n(0xf6)] + n(0xef), encodeURI(f), { 'headers': utils[n(0x104)]('form', e) }); return g['data']['status'] == -0x64 ? g[n(0xfd)] : g['data'][n(0x10b)] == 0x0 ? (Log['i'](n(0x109) + JSON[n(0xf1)](g, null, 0x4)), accessToken['uuid'] = e, accessToken[n(0xf8)] = g['data'][n(0xf4)], accessToken[n(0x105)] = accessToken[n(0xf8)] + '-' + e, accessToken['exists'] = !![], FileStream['write']('sdcard/account.t', JSON['stringify']({ 'token': accessToken[n(0xf8)], 'uuid': accessToken['uuid'] })), g['data']) : g[n(0xfd)]; } function passcode_request(c, d, e) { const o = j, f = 'password=' + d + o(0xf2) + config[o(0x10a)] + o(0xf5) + c + o(0xeb) + e, g = utils[o(0x114)](o(0xee) + config[o(0xf6)] + '/account/request_passcode.json', encodeURI(f), { 'headers': utils[o(0x104)]('form', e) }); return g['data']; } function register_device(c, d, e, f) { const p = j, g = p(0x10c) + d + p(0xf2) + config[p(0x10a)] + p(0x100) + config[p(0x10d)] + p(0xfa) + c + p(0xeb) + e + p(0x110) + f, h = utils[p(0x114)](p(0xee) + config['platform'] + p(0xf9), encodeURI(g), { 'headers': utils[p(0x104)]('form', e) }); return h[p(0xfd)][p(0x10b)] == 0x0 ? (accessToken[p(0xed)] = e, accessToken[p(0xf8)] = h[p(0xfd)][p(0xf4)], accessToken[p(0x105)] = accessToken[p(0xf8)] + '-' + e, accessToken[p(0xff)] = !![], h['data']) : h[p(0xfd)]; } module['exports'] = { 'set': setLoginInfo, 'login': login, 'passcode': passcode, 'request': request, 'get': getAutorization };